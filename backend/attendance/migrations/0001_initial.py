# Generated by Django 5.2.7 on 2025-10-23 08:59

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(1)])),
                ('description', models.TextField(blank=True, default='')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'db_table': 'classes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(1)])),
                ('date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, default='')),
                ('is_processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='attendance.class')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'db_table': 'sessions',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_image_path', models.CharField(max_length=500)),
                ('processed_image_path', models.CharField(blank=True, default='', max_length=500)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='attendance.session')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'db_table': 'images',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150, validators=[django.core.validators.MinLengthValidator(1)])),
                ('last_name', models.CharField(max_length=150, validators=[django.core.validators.MinLengthValidator(1)])),
                ('student_id', models.CharField(blank=True, default='', max_length=50)),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_enrolled', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='attendance.class')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'db_table': 'students',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='FaceCrop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_image_path', models.CharField(max_length=500)),
                ('coordinates', models.CharField(help_text='Face coordinates in format: x,y,width,height', max_length=255)),
                ('confidence_score', models.FloatField(blank=True, help_text='Confidence score for student identification (0-1)', null=True)),
                ('is_identified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='face_crops', to='attendance.image')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='face_crops', to='attendance.student')),
            ],
            options={
                'verbose_name': 'Face Crop',
                'verbose_name_plural': 'Face Crops',
                'db_table': 'face_crops',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='class',
            index=models.Index(fields=['owner', '-created_at'], name='classes_owner_i_44c526_idx'),
        ),
        migrations.AddIndex(
            model_name='class',
            index=models.Index(fields=['is_active'], name='classes_is_acti_7c0b49_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['class_session', '-date'], name='sessions_class_s_f967e9_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['is_processed'], name='sessions_is_proc_6f8465_idx'),
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['session', '-upload_date'], name='images_session_434dfc_idx'),
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['is_processed'], name='images_is_proc_8e08d9_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['class_enrolled', 'last_name', 'first_name'], name='students_class_e_d93d7b_idx'),
        ),
        migrations.AddConstraint(
            model_name='student',
            constraint=models.UniqueConstraint(fields=('first_name', 'last_name', 'class_enrolled'), name='unique_student_per_class'),
        ),
        migrations.AddIndex(
            model_name='facecrop',
            index=models.Index(fields=['image', '-created_at'], name='face_crops_image_i_f438a3_idx'),
        ),
        migrations.AddIndex(
            model_name='facecrop',
            index=models.Index(fields=['student'], name='face_crops_student_3b2f3d_idx'),
        ),
        migrations.AddIndex(
            model_name='facecrop',
            index=models.Index(fields=['is_identified'], name='face_crops_is_iden_2f888b_idx'),
        ),
    ]
